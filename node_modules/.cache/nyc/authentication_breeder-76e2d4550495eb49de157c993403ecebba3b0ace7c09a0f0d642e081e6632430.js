function cov_1iq474yc6v(){var path="/Users/ningjia/Desktop/CSDS393/server/components/authentication_breeder.js";var hash="cfb37cdf9f2e7bd4c7713faacf5a2fcd86118ac5";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/ningjia/Desktop/CSDS393/server/components/authentication_breeder.js",statementMap:{"0":{start:{line:1,column:15},end:{line:1,column:42}},"1":{start:{line:2,column:11},end:{line:2,column:42}},"2":{start:{line:3,column:15},end:{line:3,column:32}},"3":{start:{line:4,column:21},end:{line:4,column:53}},"4":{start:{line:5,column:17},end:{line:5,column:30}},"5":{start:{line:6,column:18},end:{line:6,column:52}},"6":{start:{line:7,column:22},end:{line:7,column:60}},"7":{start:{line:10,column:0},end:{line:34,column:3}},"8":{start:{line:12,column:114},end:{line:12,column:122}},"9":{start:{line:13,column:4},end:{line:33,column:5}},"10":{start:{line:15,column:21},end:{line:15,column:94}},"11":{start:{line:16,column:8},end:{line:18,column:9}},"12":{start:{line:17,column:12},end:{line:17,column:63}},"13":{start:{line:19,column:22},end:{line:19,column:26}},"14":{start:{line:21,column:26},end:{line:21,column:28}},"15":{start:{line:22,column:21},end:{line:22,column:52}},"16":{start:{line:23,column:31},end:{line:23,column:64}},"17":{start:{line:25,column:8},end:{line:26,column:156}},"18":{start:{line:28,column:22},end:{line:28,column:61}},"19":{start:{line:29,column:8},end:{line:29,column:26}},"20":{start:{line:31,column:8},end:{line:31,column:35}},"21":{start:{line:32,column:8},end:{line:32,column:46}},"22":{start:{line:36,column:0},end:{line:60,column:3}},"23":{start:{line:38,column:84},end:{line:38,column:92}},"24":{start:{line:39,column:4},end:{line:59,column:5}},"25":{start:{line:41,column:21},end:{line:41,column:94}},"26":{start:{line:42,column:8},end:{line:44,column:9}},"27":{start:{line:43,column:12},end:{line:43,column:63}},"28":{start:{line:45,column:22},end:{line:45,column:26}},"29":{start:{line:47,column:26},end:{line:47,column:28}},"30":{start:{line:48,column:21},end:{line:48,column:52}},"31":{start:{line:49,column:31},end:{line:49,column:64}},"32":{start:{line:51,column:8},end:{line:52,column:99}},"33":{start:{line:54,column:22},end:{line:54,column:61}},"34":{start:{line:55,column:8},end:{line:55,column:26}},"35":{start:{line:57,column:8},end:{line:57,column:35}},"36":{start:{line:58,column:8},end:{line:58,column:46}},"37":{start:{line:62,column:0},end:{line:87,column:3}},"38":{start:{line:64,column:68},end:{line:64,column:76}},"39":{start:{line:65,column:4},end:{line:86,column:5}},"40":{start:{line:67,column:21},end:{line:67,column:93}},"41":{start:{line:68,column:8},end:{line:71,column:9}},"42":{start:{line:69,column:12},end:{line:69,column:37}},"43":{start:{line:70,column:12},end:{line:70,column:63}},"44":{start:{line:72,column:22},end:{line:72,column:26}},"45":{start:{line:74,column:26},end:{line:74,column:28}},"46":{start:{line:75,column:21},end:{line:75,column:52}},"47":{start:{line:76,column:31},end:{line:76,column:64}},"48":{start:{line:78,column:8},end:{line:79,column:74}},"49":{start:{line:81,column:22},end:{line:81,column:61}},"50":{start:{line:82,column:8},end:{line:82,column:26}},"51":{start:{line:84,column:8},end:{line:84,column:35}},"52":{start:{line:85,column:8},end:{line:85,column:46}},"53":{start:{line:90,column:0},end:{line:111,column:2}},"54":{start:{line:91,column:4},end:{line:110,column:5}},"55":{start:{line:93,column:38},end:{line:93,column:46}},"56":{start:{line:95,column:21},end:{line:95,column:94}},"57":{start:{line:96,column:8},end:{line:98,column:9}},"58":{start:{line:97,column:12},end:{line:97,column:75}},"59":{start:{line:100,column:30},end:{line:100,column:88}},"60":{start:{line:101,column:8},end:{line:103,column:9}},"61":{start:{line:102,column:12},end:{line:102,column:75}},"62":{start:{line:105,column:22},end:{line:105,column:58}},"63":{start:{line:106,column:8},end:{line:106,column:26}},"64":{start:{line:108,column:8},end:{line:108,column:35}},"65":{start:{line:109,column:8},end:{line:109,column:46}},"66":{start:{line:113,column:0},end:{line:134,column:2}},"67":{start:{line:114,column:4},end:{line:133,column:5}},"68":{start:{line:116,column:38},end:{line:116,column:46}},"69":{start:{line:118,column:21},end:{line:118,column:94}},"70":{start:{line:119,column:8},end:{line:121,column:9}},"71":{start:{line:120,column:12},end:{line:120,column:75}},"72":{start:{line:123,column:30},end:{line:123,column:88}},"73":{start:{line:124,column:8},end:{line:126,column:9}},"74":{start:{line:125,column:12},end:{line:125,column:75}},"75":{start:{line:128,column:22},end:{line:128,column:58}},"76":{start:{line:129,column:8},end:{line:129,column:26}},"77":{start:{line:131,column:8},end:{line:131,column:35}},"78":{start:{line:132,column:8},end:{line:132,column:46}},"79":{start:{line:136,column:0},end:{line:157,column:2}},"80":{start:{line:137,column:4},end:{line:156,column:5}},"81":{start:{line:139,column:38},end:{line:139,column:46}},"82":{start:{line:141,column:21},end:{line:141,column:94}},"83":{start:{line:142,column:8},end:{line:144,column:9}},"84":{start:{line:143,column:12},end:{line:143,column:75}},"85":{start:{line:146,column:30},end:{line:146,column:88}},"86":{start:{line:147,column:8},end:{line:149,column:9}},"87":{start:{line:148,column:12},end:{line:148,column:75}},"88":{start:{line:151,column:22},end:{line:151,column:58}},"89":{start:{line:152,column:8},end:{line:152,column:26}},"90":{start:{line:154,column:8},end:{line:154,column:35}},"91":{start:{line:155,column:8},end:{line:155,column:46}},"92":{start:{line:159,column:0},end:{line:166,column:2}},"93":{start:{line:160,column:4},end:{line:165,column:5}},"94":{start:{line:161,column:8},end:{line:161,column:23}},"95":{start:{line:163,column:8},end:{line:163,column:34}},"96":{start:{line:164,column:8},end:{line:164,column:45}},"97":{start:{line:169,column:0},end:{line:178,column:2}},"98":{start:{line:170,column:4},end:{line:177,column:5}},"99":{start:{line:171,column:24},end:{line:171,column:98}},"100":{start:{line:172,column:8},end:{line:174,column:10}},"101":{start:{line:176,column:8},end:{line:176,column:24}},"102":{start:{line:180,column:0},end:{line:188,column:2}},"103":{start:{line:181,column:4},end:{line:187,column:5}},"104":{start:{line:182,column:24},end:{line:182,column:63}},"105":{start:{line:183,column:8},end:{line:183,column:29}},"106":{start:{line:184,column:8},end:{line:184,column:42}},"107":{start:{line:186,column:8},end:{line:186,column:25}},"108":{start:{line:191,column:0},end:{line:201,column:3}},"109":{start:{line:192,column:4},end:{line:200,column:5}},"110":{start:{line:193,column:24},end:{line:194,column:115}},"111":{start:{line:195,column:8},end:{line:197,column:10}},"112":{start:{line:199,column:8},end:{line:199,column:24}},"113":{start:{line:203,column:0},end:{line:203,column:24}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:10,column:44},end:{line:10,column:45}},loc:{start:{line:10,column:63},end:{line:34,column:1}},line:10},"1":{name:"(anonymous_1)",decl:{start:{line:36,column:43},end:{line:36,column:44}},loc:{start:{line:36,column:62},end:{line:60,column:1}},line:36},"2":{name:"(anonymous_2)",decl:{start:{line:62,column:42},end:{line:62,column:43}},loc:{start:{line:62,column:61},end:{line:87,column:1}},line:62},"3":{name:"(anonymous_3)",decl:{start:{line:90,column:41},end:{line:90,column:42}},loc:{start:{line:90,column:61},end:{line:111,column:1}},line:90},"4":{name:"(anonymous_4)",decl:{start:{line:113,column:40},end:{line:113,column:41}},loc:{start:{line:113,column:60},end:{line:134,column:1}},line:113},"5":{name:"(anonymous_5)",decl:{start:{line:136,column:39},end:{line:136,column:40}},loc:{start:{line:136,column:59},end:{line:157,column:1}},line:136},"6":{name:"(anonymous_6)",decl:{start:{line:159,column:40},end:{line:159,column:41}},loc:{start:{line:159,column:60},end:{line:166,column:1}},line:159},"7":{name:"(anonymous_7)",decl:{start:{line:169,column:25},end:{line:169,column:26}},loc:{start:{line:169,column:37},end:{line:178,column:1}},line:169},"8":{name:"(anonymous_8)",decl:{start:{line:180,column:28},end:{line:180,column:29}},loc:{start:{line:180,column:48},end:{line:188,column:1}},line:180},"9":{name:"(anonymous_9)",decl:{start:{line:191,column:32},end:{line:191,column:33}},loc:{start:{line:191,column:52},end:{line:201,column:1}},line:191}},branchMap:{"0":{loc:{start:{line:16,column:8},end:{line:18,column:9}},type:"if",locations:[{start:{line:16,column:8},end:{line:18,column:9}},{start:{line:16,column:8},end:{line:18,column:9}}],line:16},"1":{loc:{start:{line:42,column:8},end:{line:44,column:9}},type:"if",locations:[{start:{line:42,column:8},end:{line:44,column:9}},{start:{line:42,column:8},end:{line:44,column:9}}],line:42},"2":{loc:{start:{line:68,column:8},end:{line:71,column:9}},type:"if",locations:[{start:{line:68,column:8},end:{line:71,column:9}},{start:{line:68,column:8},end:{line:71,column:9}}],line:68},"3":{loc:{start:{line:96,column:8},end:{line:98,column:9}},type:"if",locations:[{start:{line:96,column:8},end:{line:98,column:9}},{start:{line:96,column:8},end:{line:98,column:9}}],line:96},"4":{loc:{start:{line:101,column:8},end:{line:103,column:9}},type:"if",locations:[{start:{line:101,column:8},end:{line:103,column:9}},{start:{line:101,column:8},end:{line:103,column:9}}],line:101},"5":{loc:{start:{line:119,column:8},end:{line:121,column:9}},type:"if",locations:[{start:{line:119,column:8},end:{line:121,column:9}},{start:{line:119,column:8},end:{line:121,column:9}}],line:119},"6":{loc:{start:{line:124,column:8},end:{line:126,column:9}},type:"if",locations:[{start:{line:124,column:8},end:{line:126,column:9}},{start:{line:124,column:8},end:{line:126,column:9}}],line:124},"7":{loc:{start:{line:142,column:8},end:{line:144,column:9}},type:"if",locations:[{start:{line:142,column:8},end:{line:144,column:9}},{start:{line:142,column:8},end:{line:144,column:9}}],line:142},"8":{loc:{start:{line:147,column:8},end:{line:149,column:9}},type:"if",locations:[{start:{line:147,column:8},end:{line:149,column:9}},{start:{line:147,column:8},end:{line:149,column:9}}],line:147}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"cfb37cdf9f2e7bd4c7713faacf5a2fcd86118ac5"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1iq474yc6v=function(){return actualCoverage;};}return actualCoverage;}cov_1iq474yc6v();const router=(cov_1iq474yc6v().s[0]++,require("express").Router());const db=(cov_1iq474yc6v().s[1]++,require("../Database/index.js"));const bcrypt=(cov_1iq474yc6v().s[2]++,require('bcrypt'));const jwtGenerator=(cov_1iq474yc6v().s[3]++,require("../utils/jwtGenerator"));const{Pool}=(cov_1iq474yc6v().s[4]++,require("pg"));const validInfo=(cov_1iq474yc6v().s[5]++,require("../middleware/validInfo"));const authorization=(cov_1iq474yc6v().s[6]++,require("../middleware/authorization"));// Registering
cov_1iq474yc6v().s[7]++;router.post("/register/breeder",validInfo,async(req,res)=>{cov_1iq474yc6v().f[0]++;// 1. destructure the req.body 
const{username,password,account_type,reg_email,reg_phone,cattery_name,organization,owner_name,city}=(cov_1iq474yc6v().s[8]++,req.body);cov_1iq474yc6v().s[9]++;try{// 2. check if user exists (by checking user email)
const user=(cov_1iq474yc6v().s[10]++,await db.query("SELECT * FROM account WHERE reg_email = $1",[reg_email]));cov_1iq474yc6v().s[11]++;if(user.rows.length!==0){cov_1iq474yc6v().b[0][0]++;cov_1iq474yc6v().s[12]++;return res.status(401).json("User already exists.");}else{cov_1iq474yc6v().b[0][1]++;}var newUser=(cov_1iq474yc6v().s[13]++,null);// 3. Bcrypt the user password
const saltRound=(cov_1iq474yc6v().s[14]++,10);const salt=(cov_1iq474yc6v().s[15]++,await bcrypt.genSalt(saltRound));const bcryptPassword=(cov_1iq474yc6v().s[16]++,await bcrypt.hash(password,salt));// 4. Enter the new  user inside the database
cov_1iq474yc6v().s[17]++;newUser=await db.query("INSERT INTO breeder (username, user_password, account_type, reg_email, reg_phone, cattery_name, organization, owner_name, city) VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9) RETURNING *",[username,bcryptPassword,account_type,reg_email,reg_phone,req.body.cattery_name,req.body.organization,req.body.owner_name,req.body.city]);// 5. generate jwt token for secure transaction of info and signature
const token=(cov_1iq474yc6v().s[18]++,jwtGenerator(newUser.rows[0].reg_email));cov_1iq474yc6v().s[19]++;res.json({token});}catch(err){cov_1iq474yc6v().s[20]++;console.error(err.message);cov_1iq474yc6v().s[21]++;res.status(500).send("Server error.");}});cov_1iq474yc6v().s[22]++;router.post("/register/parent",validInfo,async(req,res)=>{cov_1iq474yc6v().f[1]++;// 1. destructure the req.body 
const{username,password,account_type,reg_email,reg_phone,preferred_name}=(cov_1iq474yc6v().s[23]++,req.body);cov_1iq474yc6v().s[24]++;try{// 2. check if user exists (by checking user email)
const user=(cov_1iq474yc6v().s[25]++,await db.query("SELECT * FROM account WHERE reg_email = $1",[reg_email]));cov_1iq474yc6v().s[26]++;if(user.rows.length!==0){cov_1iq474yc6v().b[1][0]++;cov_1iq474yc6v().s[27]++;return res.status(401).json("User already exists.");}else{cov_1iq474yc6v().b[1][1]++;}var newUser=(cov_1iq474yc6v().s[28]++,null);// 3. Bcrypt the user password
const saltRound=(cov_1iq474yc6v().s[29]++,10);const salt=(cov_1iq474yc6v().s[30]++,await bcrypt.genSalt(saltRound));const bcryptPassword=(cov_1iq474yc6v().s[31]++,await bcrypt.hash(password,salt));// 4. Enter the new  user inside the database
cov_1iq474yc6v().s[32]++;newUser=await db.query("INSERT INTO potential_parents (username, user_password, account_type, reg_email, reg_phone, preferred_name) VALUES ($1, $2, $3, $4, $5, $6) ",[username,bcryptPassword,account_type,reg_email,reg_phone,req.body.preferred_name]);// 5. generate jwt token for secure transaction of info and signature
const token=(cov_1iq474yc6v().s[33]++,jwtGenerator(newUser.rows[0].reg_email));cov_1iq474yc6v().s[34]++;res.json({token});}catch(err){cov_1iq474yc6v().s[35]++;console.error(err.message);cov_1iq474yc6v().s[36]++;res.status(500).send("Server error.");}});cov_1iq474yc6v().s[37]++;router.post("/register/admin",validInfo,async(req,res)=>{cov_1iq474yc6v().f[2]++;// 1. destructure the req.body 
const{username,password,account_type,reg_email,reg_phone}=(cov_1iq474yc6v().s[38]++,req.body);cov_1iq474yc6v().s[39]++;try{// 2. check if user exists (by checking user email)
const user=(cov_1iq474yc6v().s[40]++,await db.query("SELECT * FROM admini WHERE reg_email = $1",[reg_email]));cov_1iq474yc6v().s[41]++;if(user.rows.length!==0){cov_1iq474yc6v().b[2][0]++;cov_1iq474yc6v().s[42]++;console.log(user.rows[0]);cov_1iq474yc6v().s[43]++;return res.status(401).json("User already exists.");}else{cov_1iq474yc6v().b[2][1]++;}var newUser=(cov_1iq474yc6v().s[44]++,null);// 3. Bcrypt the user password
const saltRound=(cov_1iq474yc6v().s[45]++,10);const salt=(cov_1iq474yc6v().s[46]++,await bcrypt.genSalt(saltRound));const bcryptPassword=(cov_1iq474yc6v().s[47]++,await bcrypt.hash(password,salt));// 4. Enter the new  user inside the database
cov_1iq474yc6v().s[48]++;newUser=await db.query("INSERT INTO admini (username, user_password, account_type, reg_email, reg_phone) VALUES ($1, $2, $3, $4, $5) RETURNING *",[username,bcryptPassword,account_type,reg_email,reg_phone]);// 5. generate jwt token for secure transaction of info and signature
const token=(cov_1iq474yc6v().s[49]++,jwtGenerator(newUser.rows[0].reg_email));cov_1iq474yc6v().s[50]++;res.json({token});}catch(err){cov_1iq474yc6v().s[51]++;console.error(err.message);cov_1iq474yc6v().s[52]++;res.status(500).send("Server error.");}});// Login
cov_1iq474yc6v().s[53]++;router.post("/login/breeder",validInfo,async(req,res)=>{cov_1iq474yc6v().f[3]++;cov_1iq474yc6v().s[54]++;try{// 1. destructure the req.body
const{reg_email,password}=(cov_1iq474yc6v().s[55]++,req.body);// 2. check if user doesn't exist (if not then we throw error)
const user=(cov_1iq474yc6v().s[56]++,await db.query("SELECT * FROM account WHERE reg_email = $1",[reg_email]));cov_1iq474yc6v().s[57]++;if(user.rows.length===0){cov_1iq474yc6v().b[3][0]++;cov_1iq474yc6v().s[58]++;return res.status(401).json("Password or email is incorrect.");}else{cov_1iq474yc6v().b[3][1]++;}// 3. check if incoming password is the same as the database password
const validPassword=(cov_1iq474yc6v().s[59]++,await bcrypt.compare(password,user.rows[0].user_password));cov_1iq474yc6v().s[60]++;if(!validPassword){cov_1iq474yc6v().b[4][0]++;cov_1iq474yc6v().s[61]++;return res.status(401).json("Password or email is incorrect.");}else{cov_1iq474yc6v().b[4][1]++;}// 4. given them a jwt token
const token=(cov_1iq474yc6v().s[62]++,jwtGenerator(user.rows[0].reg_email));cov_1iq474yc6v().s[63]++;res.json({token});}catch(err){cov_1iq474yc6v().s[64]++;console.error(err.message);cov_1iq474yc6v().s[65]++;res.status(500).send("Server error.");}});cov_1iq474yc6v().s[66]++;router.post("/login/parent",validInfo,async(req,res)=>{cov_1iq474yc6v().f[4]++;cov_1iq474yc6v().s[67]++;try{// 1. destructure the req.body
const{reg_email,password}=(cov_1iq474yc6v().s[68]++,req.body);// 2. check if user doesn't exist (if not then we throw error)
const user=(cov_1iq474yc6v().s[69]++,await db.query("SELECT * FROM account WHERE reg_email = $1",[reg_email]));cov_1iq474yc6v().s[70]++;if(user.rows.length===0){cov_1iq474yc6v().b[5][0]++;cov_1iq474yc6v().s[71]++;return res.status(401).json("Password or email is incorrect.");}else{cov_1iq474yc6v().b[5][1]++;}// 3. check if incoming password is the same as the database password
const validPassword=(cov_1iq474yc6v().s[72]++,await bcrypt.compare(password,user.rows[0].user_password));cov_1iq474yc6v().s[73]++;if(!validPassword){cov_1iq474yc6v().b[6][0]++;cov_1iq474yc6v().s[74]++;return res.status(401).json("Password or email is incorrect.");}else{cov_1iq474yc6v().b[6][1]++;}// 4. given them a jwt token
const token=(cov_1iq474yc6v().s[75]++,jwtGenerator(user.rows[0].reg_email));cov_1iq474yc6v().s[76]++;res.json({token});}catch(err){cov_1iq474yc6v().s[77]++;console.error(err.message);cov_1iq474yc6v().s[78]++;res.status(500).send("Server error.");}});cov_1iq474yc6v().s[79]++;router.post("/login/admin",validInfo,async(req,res)=>{cov_1iq474yc6v().f[5]++;cov_1iq474yc6v().s[80]++;try{// 1. destructure the req.body
const{reg_email,password}=(cov_1iq474yc6v().s[81]++,req.body);// 2. check if user doesn't exist (if not then we throw error)
const user=(cov_1iq474yc6v().s[82]++,await db.query("SELECT * FROM account WHERE reg_email = $1",[reg_email]));cov_1iq474yc6v().s[83]++;if(user.rows.length===0){cov_1iq474yc6v().b[7][0]++;cov_1iq474yc6v().s[84]++;return res.status(401).json("Password or email is incorrect.");}else{cov_1iq474yc6v().b[7][1]++;}// 3. check if incoming password is the same as the database password
const validPassword=(cov_1iq474yc6v().s[85]++,await bcrypt.compare(password,user.rows[0].user_password));cov_1iq474yc6v().s[86]++;if(!validPassword){cov_1iq474yc6v().b[8][0]++;cov_1iq474yc6v().s[87]++;return res.status(401).json("Password or email is incorrect.");}else{cov_1iq474yc6v().b[8][1]++;}// 4. given them a jwt token
const token=(cov_1iq474yc6v().s[88]++,jwtGenerator(user.rows[0].reg_email));cov_1iq474yc6v().s[89]++;res.json({token});}catch(err){cov_1iq474yc6v().s[90]++;console.error(err.message);cov_1iq474yc6v().s[91]++;res.status(500).send("Server error.");}});cov_1iq474yc6v().s[92]++;router.get("/is-verify",authorization,async(req,res)=>{cov_1iq474yc6v().f[6]++;cov_1iq474yc6v().s[93]++;try{cov_1iq474yc6v().s[94]++;res.json(true);}catch(err){cov_1iq474yc6v().s[95]++;console.error(err.message);cov_1iq474yc6v().s[96]++;res.status(500).send("Server error.");}});// delete a user (for administrator only)
cov_1iq474yc6v().s[97]++;router.delete("/delete",(req,res)=>{cov_1iq474yc6v().f[7]++;cov_1iq474yc6v().s[98]++;try{const results=(cov_1iq474yc6v().s[99]++,db.query("DELETE FROM account where reg_email = $1",[req.body.reg_email]));cov_1iq474yc6v().s[100]++;res.status(204).json({status:"success"});}catch(err){cov_1iq474yc6v().s[101]++;console.log(err);}});cov_1iq474yc6v().s[102]++;router.get("/all_accounts",async(req,res)=>{cov_1iq474yc6v().f[8]++;cov_1iq474yc6v().s[103]++;try{const results=(cov_1iq474yc6v().s[104]++,await db.query("SELECT * FROM account"));cov_1iq474yc6v().s[105]++;console.log(results);cov_1iq474yc6v().s[106]++;res.status(200).send(results.rows);}catch(err){cov_1iq474yc6v().s[107]++;console.log(err);}});// update an account
cov_1iq474yc6v().s[108]++;router.patch("/update_account",async(req,res)=>{cov_1iq474yc6v().f[9]++;cov_1iq474yc6v().s[109]++;try{const results=(cov_1iq474yc6v().s[110]++,await db.query("UPDATE account SET username = $1, user_password=$2, account_type = $3, reg_phone = $4 WHERE reg_email = $5",[req.body.username,req.body.user_password,req.body.account_type,req.body.reg_phone,req.body.reg_email]));cov_1iq474yc6v().s[111]++;res.status(200).json({status:"success"});}catch(err){cov_1iq474yc6v().s[112]++;console.log(err);}});cov_1iq474yc6v().s[113]++;module.exports=router;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,